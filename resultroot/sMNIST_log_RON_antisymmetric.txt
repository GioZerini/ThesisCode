dataroot: acds/benchmarks/, resultroot: resultroot, resultsuffix: , n_hid: 1000, batch: 30, dt: 0.042, gamma: 2.7, epsilon: 0.51, gamma_range: 1.0, epsilon_range: 0.5, cpu: False, esn: False, ron: True, pron: False, mspron: False, inp_scaling: 1.0, rho: 9.0, leaky: 1.0, use_test: True, trials: 5, topology: antisymmetric, sparsity: 0.0, reservoir_scaler: 1.0, train: ['0.97', '0.97', '0.97', '0.97', '0.97'] valid: ['0.0', '0.0', '0.0', '0.0', '0.0'] test: ['0.95', '0.94', '0.94', '0.94', '0.94']mean/std train: (np.float64(0.9698333333333332), np.float64(0.002092576204458935)) mean/std valid: (np.float64(0.0), np.float64(0.0)) mean/std test: (np.float64(0.9430200000000001), np.float64(0.0024555243839147643))



dataroot: acds/benchmarks/, resultroot: resultroot, resultsuffix: , n_hid: 1000, batch: 30, dt: 0.042, gamma: 0.27, epsilon: 5.1, gamma_range: 1.0, epsilon_range: 1.0, cpu: False, esn: False, ron: True, pron: False, mspron: False, inp_scaling: 1.0, rho: 0.99, leaky: 1.0, use_test: True, trials: 2, topology: antisymmetric, sparsity: 0.0, reservoir_scaler: 1.0, train: ['0.98', '0.98'] valid: ['0.0', '0.0'] test: ['0.94', '0.93']mean/std train: (np.float64(0.9778055555555556), np.float64(0.0023240740740740895)) mean/std valid: (np.float64(0.0), np.float64(0.0)) mean/std test: (np.float64(0.9359500000000001), np.float64(0.0023500000000000187))


TEST CON DIFFUSION_GAMMA E IPERPARAMETRI CORRETTI


dataroot: acds/benchmarks/, resultroot: resultroot, resultsuffix: , n_hid: 1000, batch: 30, dt: 0.014, gamma: 0.3, epsilon: 5.1, gamma_range: 1.0, epsilon_range: 1.0, cpu: False, esn: False, ron: True, pron: False, mspron: False, diffusion_gamma: 0.05, inp_scaling: 1.0, rho: 9.0, leaky: 1.0, use_test: True, trials: 5, topology: antisymmetric, sparsity: 0.0, reservoir_scaler: 1.0, train: ['0.98', '0.98', '0.98', '0.98', '0.97'] valid: ['0.0', '0.0', '0.0', '0.0', '0.0'] test: ['0.96', '0.96', '0.96', '0.96', '0.96']mean/std train: (np.float64(0.9759407407407409), np.float64(0.0005922915902208656)) mean/std valid: (np.float64(0.0), np.float64(0.0)) mean/std test: (np.float64(0.96268), np.float64(0.0006273754856543195))
