RIPARTIAMO DA CAPO



dataroot: acds/benchmarks/raw/adiac, resultroot: resultGridSearch/, resultsuffix: trainmatrix, n_hid: 90, modelname: trainedpron, train_oscillators: True, train_recurrent: False, batch: 30, dt: 0.1, gamma: 1.0, epsilon: 0.5, gamma_range: 1.0, epsilon_range: 0.5, cpu: False, matrix_friction: False, input_fn: linear, diffusive_gamma: 0.1, inp_scaling: 1.0, use_test: False, trials: 1, epochs: 1000, lr: 0.02, topology: antisymmetric, train: ['0.83'] valid: ['0.61'] test: ['0.0']mean/std train: (np.float64(0.825925886631012), np.float64(0.0)) mean/std valid: (np.float64(0.6083333492279053), np.float64(0.0)) mean/std test: (np.float64(0.0), np.float64(0.0))


NON USARE DT = 1.

dataroot: acds/benchmarks/raw/adiac, resultroot: resultGridSearch/, resultsuffix: trainmatrix, n_hid: 90, modelname: trainedpron, train_oscillators: True, train_recurrent: False, batch: 30, dt: 0.1, gamma: 1.0, epsilon: 0.5, gamma_range: 1.0, epsilon_range: 0.5, cpu: False, matrix_friction: False, input_fn: linear, diffusive_gamma: 1.0, inp_scaling: 1.0, use_test: False, trials: 1, epochs: 1000, lr: 0.01, topology: antisymmetric, train: ['0.93'] valid: ['0.69'] test: ['0.0']mean/std train: (np.float64(0.9296296238899231), np.float64(0.0)) mean/std valid: (np.float64(0.6916667222976685), np.float64(0.0)) mean/std test: (np.float64(0.0), np.float64(0.0))

dataroot: acds/benchmarks/raw/adiac, resultroot: resultGridSearch/, resultsuffix: trainmatrix, n_hid: 90, modelname: trainedpron, train_oscillators: True, train_recurrent: False, batch: 30, dt: 0.1, gamma: 1.0, epsilon: 0.5, gamma_range: 1.0, epsilon_range: 0.5, cpu: False, matrix_friction: False, input_fn: linear, diffusive_gamma: 0.01, inp_scaling: 1.0, use_test: False, trials: 1, epochs: 1000, lr: 0.01, topology: antisymmetric, train: ['0.98'] valid: ['0.66'] test: ['0.0']mean/std train: (np.float64(0.9814814925193787), np.float64(0.0)) mean/std valid: (np.float64(0.6583333611488342), np.float64(0.0)) mean/std test: (np.float64(0.0), np.float64(0.0))

dataroot: acds/benchmarks/raw/adiac, resultroot: resultGridSearch/, resultsuffix: trainmatrix, n_hid: 90, modelname: trainedpron, train_oscillators: True, train_recurrent: False, batch: 30, dt: 0.01, gamma: 1.0, epsilon: 0.5, gamma_range: 1.0, epsilon_range: 0.5, cpu: False, matrix_friction: False, input_fn: linear, diffusive_gamma: 1.0, inp_scaling: 1.0, use_test: False, trials: 1, epochs: 1000, lr: 0.01, topology: antisymmetric, train: ['0.57'] valid: ['0.37'] test: ['0.0']mean/std train: (np.float64(0.5666666626930237), np.float64(0.0)) mean/std valid: (np.float64(0.36666667461395264), np.float64(0.0)) mean/std test: (np.float64(0.0), np.float64(0.0))

dataroot: acds/benchmarks/raw/adiac, resultroot: resultGridSearch/, resultsuffix: trainmatrix, n_hid: 90, modelname: trainedpron, train_oscillators: True, train_recurrent: False, batch: 30, dt: 0.01, gamma: 1.0, epsilon: 0.5, gamma_range: 1.0, epsilon_range: 0.5, cpu: False, matrix_friction: False, input_fn: linear, diffusive_gamma: 0.01, inp_scaling: 1.0, use_test: False, trials: 1, epochs: 1000, lr: 0.01, topology: antisymmetric, train: ['0.58'] valid: ['0.32'] test: ['0.0']mean/std train: (np.float64(0.5814814567565918), np.float64(0.0)) mean/std valid: (np.float64(0.31666669249534607), np.float64(0.0)) mean/std test: (np.float64(0.0), np.float64(0.0))

dataroot: acds/benchmarks/raw/adiac, resultroot: resultGridSearch/, resultsuffix: trainmatrix, n_hid: 90, modelname: trainedpron, train_oscillators: True, train_recurrent: False, batch: 30, dt: 0.5, gamma: 1.0, epsilon: 0.5, gamma_range: 1.0, epsilon_range: 0.5, cpu: False, matrix_friction: False, input_fn: linear, diffusive_gamma: 0.5, inp_scaling: 1.0, use_test: False, trials: 1, epochs: 1000, lr: 0.01, topology: antisymmetric, train: ['0.02'] valid: ['0.06'] test: ['0.0']mean/std train: (np.float64(0.02222222089767456), np.float64(0.0)) mean/std valid: (np.float64(0.05833333730697632), np.float64(0.0)) mean/std test: (np.float64(0.0), np.float64(0.0))

dataroot: acds/benchmarks/raw/adiac, resultroot: resultGridSearch/, resultsuffix: trainmatrix, n_hid: 90, modelname: trainedpron, train_oscillators: True, train_recurrent: False, batch: 30, dt: 0.5, gamma: 1.0, epsilon: 0.5, gamma_range: 1.0, epsilon_range: 0.5, cpu: False, matrix_friction: False, input_fn: linear, diffusive_gamma: 0.1, inp_scaling: 1.0, use_test: False, trials: 1, epochs: 1000, lr: 0.01, topology: antisymmetric, train: ['0.02'] valid: ['0.06'] test: ['0.0']mean/std train: (np.float64(0.02222222089767456), np.float64(0.0)) mean/std valid: (np.float64(0.05833333730697632), np.float64(0.0)) mean/std test: (np.float64(0.0), np.float64(0.0))

dataroot: acds/benchmarks/raw/adiac, resultroot: resultGridSearch/, resultsuffix: trainmatrix, n_hid: 90, modelname: trainedpron, train_oscillators: True, train_recurrent: False, batch: 30, dt: 0.1, gamma: 1.0, epsilon: 0.5, gamma_range: 1.0, epsilon_range: 0.5, cpu: False, matrix_friction: False, input_fn: linear, diffusive_gamma: 0.5, inp_scaling: 1.0, use_test: False, trials: 1, epochs: 1000, lr: 0.01, topology: antisymmetric, train: ['0.93'] valid: ['0.63'] test: ['0.0']mean/std train: (np.float64(0.9296296238899231), np.float64(0.0)) mean/std valid: (np.float64(0.6333333849906921), np.float64(0.0)) mean/std test: (np.float64(0.0), np.float64(0.0))

dataroot: acds/benchmarks/raw/adiac, resultroot: resultGridSearch/, resultsuffix: trainmatrix, n_hid: 90, modelname: trainedpron, train_oscillators: True, train_recurrent: False, batch: 30, dt: 0.1, gamma: 1.0, epsilon: 0.5, gamma_range: 1.0, epsilon_range: 0.5, cpu: False, matrix_friction: False, input_fn: linear, diffusive_gamma: 0.1, inp_scaling: 1.0, use_test: False, trials: 1, epochs: 1000, lr: 0.01, topology: antisymmetric, train: ['0.94'] valid: ['0.58'] test: ['0.0']mean/std train: (np.float64(0.9370369911193848), np.float64(0.0)) mean/std valid: (np.float64(0.5833333730697632), np.float64(0.0)) mean/std test: (np.float64(0.0), np.float64(0.0))



dataroot: acds/benchmarks/raw/adiac, resultroot: resultGridSearch/, resultsuffix: trainmatrix, n_hid: 90, modelname: trainedpron, train_oscillators: True, train_recurrent: False, batch: 30, dt: 0.1, gamma: 1.0, epsilon: 0.5, gamma_range: 1.0, epsilon_range: 0.5, cpu: False, matrix_friction: False, input_fn: linear, diffusive_gamma: 1.0, inp_scaling: 1.0, use_test: False, trials: 1, epochs: 1000, lr: 0.01, topology: antisymmetric, train: ['0.94'] valid: ['0.66'] test: ['0.0']mean/std train: (np.float64(0.9370369911193848), np.float64(0.0)) mean/std valid: (np.float64(0.6583333611488342), np.float64(0.0)) mean/std test: (np.float64(0.0), np.float64(0.0))

dataroot: acds/benchmarks/raw/adiac, resultroot: resultGridSearch/, resultsuffix: trainmatrix, n_hid: 90, modelname: trainedpron, train_oscillators: True, train_recurrent: False, batch: 30, dt: 0.1, gamma: 1.0, epsilon: 0.5, gamma_range: 1.0, epsilon_range: 0.5, cpu: False, matrix_friction: False, input_fn: linear, diffusive_gamma: 0.75, inp_scaling: 1.0, use_test: False, trials: 1, epochs: 1000, lr: 0.01, topology: antisymmetric, train: ['0.97'] valid: ['0.63'] test: ['0.0']mean/std train: (np.float64(0.9666666388511658), np.float64(0.0)) mean/std valid: (np.float64(0.6250000596046448), np.float64(0.0)) mean/std test: (np.float64(0.0), np.float64(0.0))

dataroot: acds/benchmarks/raw/adiac, resultroot: resultGridSearch/, resultsuffix: trainmatrix, n_hid: 90, modelname: trainedpron, train_oscillators: True, train_recurrent: False, batch: 30, dt: 0.1, gamma: 1.0, epsilon: 0.5, gamma_range: 1.0, epsilon_range: 0.5, cpu: False, matrix_friction: False, input_fn: linear, diffusive_gamma: 0.001, inp_scaling: 1.0, use_test: False, trials: 1, epochs: 1000, lr: 0.01, topology: antisymmetric, train: ['0.94'] valid: ['0.64'] test: ['0.0']mean/std train: (np.float64(0.940740704536438), np.float64(0.0)) mean/std valid: (np.float64(0.6416667103767395), np.float64(0.0)) mean/std test: (np.float64(0.0), np.float64(0.0))

dataroot: acds/benchmarks/raw/adiac, resultroot: resultGridSearch/, resultsuffix: trainmatrix, n_hid: 90, modelname: trainedpron, train_oscillators: True, train_recurrent: False, batch: 30, dt: 0.05, gamma: 1.0, epsilon: 0.5, gamma_range: 1.0, epsilon_range: 0.5, cpu: False, matrix_friction: False, input_fn: linear, diffusive_gamma: 1.0, inp_scaling: 1.0, use_test: False, trials: 1, epochs: 1000, lr: 0.01, topology: antisymmetric, train: ['0.94'] valid: ['0.59'] test: ['0.0']mean/std train: (np.float64(0.940740704536438), np.float64(0.0)) mean/std valid: (np.float64(0.5916666984558105), np.float64(0.0)) mean/std test: (np.float64(0.0), np.float64(0.0))

dataroot: acds/benchmarks/raw/adiac, resultroot: resultGridSearch/, resultsuffix: trainmatrix, n_hid: 90, modelname: trainedpron, train_oscillators: True, train_recurrent: False, batch: 30, dt: 0.05, gamma: 1.0, epsilon: 0.5, gamma_range: 1.0, epsilon_range: 0.5, cpu: False, matrix_friction: False, input_fn: linear, diffusive_gamma: 0.75, inp_scaling: 1.0, use_test: False, trials: 1, epochs: 1000, lr: 0.01, topology: antisymmetric, train: ['0.9'] valid: ['0.6'] test: ['0.0']mean/std train: (np.float64(0.8962962627410889), np.float64(0.0)) mean/std valid: (np.float64(0.6000000238418579), np.float64(0.0)) mean/std test: (np.float64(0.0), np.float64(0.0))

dataroot: acds/benchmarks/raw/adiac, resultroot: resultGridSearch/, resultsuffix: trainmatrix, n_hid: 90, modelname: trainedpron, train_oscillators: True, train_recurrent: False, batch: 30, dt: 0.05, gamma: 1.0, epsilon: 0.5, gamma_range: 1.0, epsilon_range: 0.5, cpu: False, matrix_friction: False, input_fn: linear, diffusive_gamma: 0.001, inp_scaling: 1.0, use_test: False, trials: 1, epochs: 1000, lr: 0.01, topology: antisymmetric, train: ['0.9'] valid: ['0.61'] test: ['0.0']mean/std train: (np.float64(0.8962962627410889), np.float64(0.0)) mean/std valid: (np.float64(0.6083333492279053), np.float64(0.0)) mean/std test: (np.float64(0.0), np.float64(0.0))

VEDIAMO SE Ã¨ MEGLIO USARE UN LR PIÃ¹ PICCOLO.

dataroot: acds/benchmarks/raw/adiac, resultroot: resultGridSearch/, resultsuffix: trainmatrix, n_hid: 90, modelname: trainedpron, train_oscillators: True, train_recurrent: False, batch: 30, dt: 0.1, gamma: 1.0, epsilon: 0.5, gamma_range: 1.0, epsilon_range: 0.5, cpu: False, matrix_friction: False, input_fn: linear, diffusive_gamma: 1.0, inp_scaling: 1.0, use_test: False, trials: 1, epochs: 1000, lr: 0.005, topology: antisymmetric, train: ['0.93'] valid: ['0.62'] test: ['0.0']mean/std train: (np.float64(0.9333333373069763), np.float64(0.0)) mean/std valid: (np.float64(0.6166666746139526), np.float64(0.0)) mean/std test: (np.float64(0.0), np.float64(0.0))



dataroot: acds/benchmarks/raw/adiac, resultroot: resultGridSearch/, resultsuffix: trainmatrix, n_hid: 90, modelname: trainedpron, train_oscillators: True, train_recurrent: False, batch: 30, dt: 0.1, gamma: 1.0, epsilon: 0.5, gamma_range: 1.0, epsilon_range: 0.5, cpu: False, matrix_friction: False, input_fn: linear, diffusive_gamma: 1.0, inp_scaling: 1.0, use_test: False, trials: 1, epochs: 1000, lr: 0.02, topology: antisymmetric, train: ['0.87'] valid: ['0.71'] test: ['0.0']mean/std train: (np.float64(0.8666666746139526), np.float64(0.0)) mean/std valid: (np.float64(0.7083333730697632), np.float64(0.0)) mean/std test: (np.float64(0.0), np.float64(0.0))
dataroot: acds/benchmarks/raw/adiac, resultroot: resultGridSearch/, resultsuffix: trainmatrix, n_hid: 90, modelname: trainedpron, train_oscillators: True, train_recurrent: False, batch: 30, dt: 0.1, gamma: 1.0, epsilon: 0.5, gamma_range: 1.0, epsilon_range: 0.5, cpu: False, matrix_friction: False, input_fn: linear, diffusive_gamma: 1.0, inp_scaling: 1.0, use_test: False, trials: 1, epochs: 1000, lr: 0.015, topology: antisymmetric, train: ['0.96'] valid: ['0.67'] test: ['0.0']mean/std train: (np.float64(0.9555555582046509), np.float64(0.0)) mean/std valid: (np.float64(0.6666666865348816), np.float64(0.0)) mean/std test: (np.float64(0.0), np.float64(0.0))
dataroot: acds/benchmarks/raw/adiac, resultroot: resultGridSearch/, resultsuffix: trainmatrix, n_hid: 90, modelname: trainedpron, train_oscillators: True, train_recurrent: False, batch: 30, dt: 0.1, gamma: 1.0, epsilon: 0.5, gamma_range: 1.0, epsilon_range: 0.5, cpu: False, matrix_friction: False, input_fn: linear, diffusive_gamma: 0.1, inp_scaling: 1.0, use_test: False, trials: 1, epochs: 1000, lr: 0.01, topology: antisymmetric, train: ['0.94'] valid: ['0.61'] test: ['0.0']mean/std train: (np.float64(0.940740704536438), np.float64(0.0)) mean/std valid: (np.float64(0.6083333492279053), np.float64(0.0)) mean/std test: (np.float64(0.0), np.float64(0.0))
dataroot: acds/benchmarks/raw/adiac, resultroot: resultGridSearch/, resultsuffix: trainmatrix, n_hid: 90, modelname: trainedpron, train_oscillators: True, train_recurrent: False, batch: 30, dt: 0.1, gamma: 1.0, epsilon: 0.5, gamma_range: 1.0, epsilon_range: 0.5, cpu: False, matrix_friction: False, input_fn: linear, diffusive_gamma: 0.01, inp_scaling: 1.0, use_test: False, trials: 1, epochs: 1000, lr: 0.01, topology: antisymmetric, train: ['0.98'] valid: ['0.63'] test: ['0.0']mean/std train: (np.float64(0.9814814925193787), np.float64(0.0)) mean/std valid: (np.float64(0.6250000596046448), np.float64(0.0)) mean/std test: (np.float64(0.0), np.float64(0.0))
dataroot: acds/benchmarks/raw/adiac, resultroot: resultGridSearch/, resultsuffix: trainmatrix, n_hid: 90, modelname: trainedpron, train_oscillators: True, train_recurrent: False, batch: 30, dt: 0.1, gamma: 1.0, epsilon: 0.5, gamma_range: 1.0, epsilon_range: 0.5, cpu: False, matrix_friction: False, input_fn: linear, diffusive_gamma: 0.001, inp_scaling: 1.0, use_test: False, trials: 1, epochs: 1000, lr: 0.01, topology: antisymmetric, train: ['0.93'] valid: ['0.62'] test: ['0.0']mean/std train: (np.float64(0.9259259104728699), np.float64(0.0)) mean/std valid: (np.float64(0.6166666746139526), np.float64(0.0)) mean/std test: (np.float64(0.0), np.float64(0.0))
dataroot: acds/benchmarks/raw/adiac, resultroot: resultGridSearch/, resultsuffix: trainmatrix, n_hid: 90, modelname: trainedpron, train_oscillators: True, train_recurrent: False, batch: 30, dt: 0.1, gamma: 3, epsilon: 5, gamma_range: 2, epsilon_range: 1, cpu: False, matrix_friction: False, input_fn: linear, diffusive_gamma: 1.0, inp_scaling: 1.0, use_test: False, trials: 1, epochs: 1000, lr: 0.01, topology: antisymmetric, train: ['0.62'] valid: ['0.51'] test: ['0.0']mean/std train: (np.float64(0.6185185313224792), np.float64(0.0)) mean/std valid: (np.float64(0.5083333849906921), np.float64(0.0)) mean/std test: (np.float64(0.0), np.float64(0.0))
